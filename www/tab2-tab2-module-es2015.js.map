{"version":3,"sources":["./src/app/services/photo.service.ts","./src/app/tab2/tab2.module.ts","./src/app/tab2/tab2.page.ts","./src/app/tab2/tab2.page.html"],"names":[],"mappings":"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","file":"tab2-tab2-module-es2015.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n  public photos: Photo[] = [];\n  private PHOTO_STORAGE: string = \"photos\";\n  private platform: Platform;\n\n  constructor(platform: Platform) {\n    this.platform = platform;\n   }\n\n  public async loadSaved() {\n    // Retrieve cached photo array data\n    const photos = await Storage.get({ key: this.PHOTO_STORAGE });\n    this.photos = JSON.parse(photos.value) || [];\n\n    // If running on the web...\n    if (!this.platform.is('hybrid')) {\n      // Display the photo by reading into base64 format\n      for (let photo of this.photos) {\n        // Read each saved photo's data from the Filesystem\n        const readFile = await Filesystem.readFile({\n            path: photo.filepath,\n            directory: FilesystemDirectory.Data\n        });\n      \n        // Web platform only: Save the photo into the base64 field\n        photo.base64 = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  }\n\n  /* Use the device camera to take a photo:\n  // https://capacitor.ionicframework.com/docs/apis/camera\n  \n  // Store the photo data into permanent file storage:\n  // https://capacitor.ionicframework.com/docs/apis/filesystem\n  \n  // Store a reference to all photo filepaths using Storage API:\n  // https://capacitor.ionicframework.com/docs/apis/storage\n  */\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\n      source: CameraSource.Camera, // automatically take a new photo with the camera\n      quality: 100 // highest quality (0 to 100)\n    });\n    \n    const savedImageFile = await this.savePicture(capturedPhoto);\n\n    // Add new photo to Photos array\n    this.photos.unshift(savedImageFile);\n\n    // Cache all photo data for future retrieval\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: this.platform.is('hybrid')\n              ? JSON.stringify(this.photos)  \n              : JSON.stringify(this.photos.map(p => {\n                // Don't save the base64 representation of the photo data, \n                // since it's already saved on the Filesystem\n                const photoCopy = { ...p };\n                delete photoCopy.base64;\n\n                return photoCopy;\n                }))\n    });\n  }\n\n  // Save picture to file on device\n  private async savePicture(cameraPhoto: CameraPhoto) {\n    // Convert photo to base64 format, required by Filesystem API to save\n    const base64Data = await this.readAsBase64(cameraPhoto);\n\n    // Write the file to the data directory\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n\n    if (this.platform.is('hybrid')) {\n      // Display the new image by rewriting the 'file://' path to HTTP\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    }\n    else {\n      // Use webPath to display the new image instead of base64 since it's \n      // already loaded into memory\n      return {\n        filepath: fileName,\n        webviewPath: cameraPhoto.webPath\n      };\n    }\n  }\n\n  // Read camera photo into base64 format based on the platform the app is running on\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    // \"hybrid\" will detect Cordova or Capacitor\n    if (this.platform.is('hybrid')) {\n      // Read the file into base64 format\n      const file = await Filesystem.readFile({\n        path: cameraPhoto.path\n      });\n\n      return file.data;\n    }\n    else {\n      // Fetch the photo, read as a blob, then convert to base64 format\n      const response = await fetch(cameraPhoto.webPath!);\n      const blob = await response.blob();\n\n      return await this.convertBlobToBase64(blob) as string;  \n    }\n  }\n\n  // Delete picture by removing it from reference data and the filesystem\n  public async deletePicture(photo: Photo, position: number) {\n    // Remove this photo from the Photos reference data array\n    this.photos.splice(position, 1);\n\n    // Update photos array cache by overwriting the existing photo array\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n\n    // delete photo file from filesystem\n    const filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\n    await Filesystem.deleteFile({\n      path: filename,\n      directory: FilesystemDirectory.Data\n    });\n  }\n\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\ninterface Photo {\n  filepath: string;\n  webviewPath: string;\n  base64?: string;\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","import { Component } from '@angular/core';\nimport { ActionSheetController } from '@ionic/angular';\nimport { PhotoService } from '../services/photo.service';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {\n\n  constructor(public photoService: PhotoService, public actionSheetController: ActionSheetController) {}\n\n  ngOnInit() {\n    this.photoService.loadSaved();\n  }\n\n  public async showActionSheet(photo, position) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Photos',\n      buttons: [{\n        text: 'Delete',\n        role: 'destructive',\n        icon: 'trash',\n        handler: () => {\n          this.photoService.deletePicture(photo, position);\n        }\n      }, {\n        text: 'Cancel',\n        icon: 'close',\n        role: 'cancel',\n        handler: () => {\n          // Nothing to do, action sheet is automatically closed\n         }\n      }]\n    });\n    await actionSheet.present();\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>\n      Photo Gallery\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Photo Gallery</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-grid>\n    <ion-row>\n    <ion-col size=\"6\" *ngFor=\"let photo of photoService.photos; index as position\">\n      <ion-img src=\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\" (click)=\"showActionSheet(photo, position)\"></ion-img>\n    </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\">\n    <ion-fab-button (click)=\"photoService.addNewToGallery()\">\n      <ion-icon name=\"camera\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n"],"sourceRoot":"webpack:///"}