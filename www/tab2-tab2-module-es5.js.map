{"version":3,"sources":["webpack:///src/app/services/photo.service.ts","webpack:///src/app/tab2/tab2.module.ts","webpack:///src/app/tab2/tab2.page.html","webpack:///src/app/tab2/tab2.page.ts"],"names":["Camera","Filesystem","Storage","PhotoService","platform","photos","PHOTO_STORAGE","convertBlobToBase64","blob","Promise","resolve","reject","reader","FileReader","onerror","onload","result","readAsDataURL","get","key","JSON","parse","value","is","photo","readFile","path","filepath","directory","Data","base64","data","getPhoto","resultType","Uri","source","quality","capturedPhoto","savePicture","savedImageFile","unshift","set","stringify","map","p","photoCopy","cameraPhoto","readAsBase64","base64Data","fileName","Date","getTime","writeFile","savedFile","uri","webviewPath","convertFileSrc","webPath","file","fetch","response","position","splice","filename","substr","lastIndexOf","deleteFile","providedIn","Tab2PageModule","forChild","component","imports","declarations","Tab2Page","photoService","actionSheetController","loadSaved","create","header","buttons","text","role","icon","handler","deletePicture","actionSheet","present","selector","templateUrl","styleUrls"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;gCAIwC,uD;QAAhCA,M,yBAAAA,M;QAAQC,U,yBAAAA,U;QAAYC,O,yBAAAA,O;;QAKfC,Y;AAKX,4BAAYC,QAAZ,EAAgC;AAAA;;AAJzB,aAAAC,MAAA,GAAkB,EAAlB;AACC,aAAAC,aAAA,GAAwB,QAAxB;;AAwIR,aAAAC,mBAAA,GAAsB,UAACC,IAAD;AAAA,iBAAgB,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACrE,gBAAMC,MAAM,GAAG,IAAIC,UAAJ,EAAf;AACAD,kBAAM,CAACE,OAAP,GAAiBH,MAAjB;;AACAC,kBAAM,CAACG,MAAP,GAAgB,YAAM;AAClBL,qBAAO,CAACE,MAAM,CAACI,MAAR,CAAP;AACH,aAFD;;AAGAJ,kBAAM,CAACK,aAAP,CAAqBT,IAArB;AACD,WAPqC,CAAhB;AAAA,SAAtB;;AApIE,aAAKJ,QAAL,GAAgBA,QAAhB;AACA;;;;oCAEuB;;;;;;;;;AAER,2BAAMF,OAAO,CAACgB,GAAR,CAAY;AAAEC,yBAAG,EAAE,KAAKb;AAAZ,qBAAZ,CAAN;;;AAATD,0B;AACN,yBAAKA,MAAL,GAAce,IAAI,CAACC,KAAL,CAAWhB,MAAM,CAACiB,KAAlB,KAA4B,EAA1C,C,CAEA;;wBACK,KAAKlB,QAAL,CAAcmB,EAAd,CAAiB,QAAjB,C;;;;;AACH;2DACkB,KAAKlB,M;;;;;;;;;;;AAAdmB,yB;;AAEU,2BAAMvB,UAAU,CAACwB,QAAX,CAAoB;AACvCC,0BAAI,EAAEF,KAAK,CAACG,QAD2B;AAEvCC,+BAAS,EAAE,oEAAoBC;AAFQ,qBAApB,CAAN;;;AAAXJ,4B;AAKN;AACAD,yBAAK,CAACM,MAAN,oCAAyCL,QAAQ,CAACM,IAAlD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAGL;AAED;;;;;;;;;;;;0CAS+B;;;;;;;;AAEP,2BAAM/B,MAAM,CAACgC,QAAP,CAAgB;AAC1CC,gCAAU,EAAE,iEAAiBC,GADa;AAE1CC,4BAAM,EAAE,6DAAanC,MAFqB;AAG1CoC,6BAAO,EAAE,GAHiC,CAG7B;;AAH6B,qBAAhB,CAAN;;;AAAhBC,iC;;AAMiB,2BAAM,KAAKC,WAAL,CAAiBD,aAAjB,CAAN;;;AAAjBE,kC;AAEN;AACA,yBAAKlC,MAAL,CAAYmC,OAAZ,CAAoBD,cAApB,E,CAEA;;AACArC,2BAAO,CAACuC,GAAR,CAAY;AACVtB,yBAAG,EAAE,KAAKb,aADA;AAEVgB,2BAAK,EAAE,KAAKlB,QAAL,CAAcmB,EAAd,CAAiB,QAAjB,IACGH,IAAI,CAACsB,SAAL,CAAe,KAAKrC,MAApB,CADH,GAEGe,IAAI,CAACsB,SAAL,CAAe,KAAKrC,MAAL,CAAYsC,GAAZ,CAAgB,UAAAC,CAAC,EAAI;AACpC;AACA;AACA,4BAAMC,SAAS,GAAG,MAAH,OAAG,CAAH,EAAG,EAAKD,CAAL,CAAlB;AACA,+BAAOC,SAAS,CAACf,MAAjB;AAEA,+BAAOe,SAAP;AACC,uBAPc,CAAf;AAJA,qBAAZ;;;;;;;;;AAaD,S,CAED;;;;oCAC0BC,W,EAA0B;;;;;;;;AAE/B,2BAAM,KAAKC,YAAL,CAAkBD,WAAlB,CAAN;;;AAAbE,8B;AAEN;AACMC,4B,GAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,O;;AACtB,2BAAMlD,UAAU,CAACmD,SAAX,CAAqB;AAC3C1B,0BAAI,EAAEuB,QADqC;AAE3ClB,0BAAI,EAAEiB,UAFqC;AAG3CpB,+BAAS,EAAE,oEAAoBC;AAHY,qBAArB,CAAN;;;AAAZwB,6B;;yBAMF,KAAKjD,QAAL,CAAcmB,EAAd,CAAiB,QAAjB,C;;;;;sDAGK;AACLI,8BAAQ,EAAE0B,SAAS,CAACC,GADf;AAELC,iCAAW,EAAE,0DAAUC,cAAV,CAAyBH,SAAS,CAACC,GAAnC;AAFR,qB;;;sDAQA;AACL3B,8BAAQ,EAAEsB,QADL;AAELM,iCAAW,EAAET,WAAW,CAACW;AAFpB,qB;;;;;;;;;AAKV,S,CAED;;;;qCAC2BX,W,EAA0B;;;;;;;yBAE/C,KAAK1C,QAAL,CAAcmB,EAAd,CAAiB,QAAjB,C;;;;;;AAEW,2BAAMtB,UAAU,CAACwB,QAAX,CAAoB;AACrCC,0BAAI,EAAEoB,WAAW,CAACpB;AADmB,qBAApB,CAAN;;;AAAPgC,wB;sDAICA,IAAI,CAAC3B,I;;;;AAIK,2BAAM4B,KAAK,CAACb,WAAW,CAACW,OAAb,CAAX;;;AAAXG,4B;;AACO,2BAAMA,QAAQ,CAACpD,IAAT,EAAN;;;AAAPA,wB;;AAEC,2BAAM,KAAKD,mBAAL,CAAyBC,IAAzB,CAAN;;;;;;;;;;;;AAEV,S,CAED;;;;sCAC2BgB,K,EAAcqC,Q,EAAkB;;;;;;;AACzD;AACA,yBAAKxD,MAAL,CAAYyD,MAAZ,CAAmBD,QAAnB,EAA6B,CAA7B,E,CAEA;;AACA3D,2BAAO,CAACuC,GAAR,CAAY;AACVtB,yBAAG,EAAE,KAAKb,aADA;AAEVgB,2BAAK,EAAEF,IAAI,CAACsB,SAAL,CAAe,KAAKrC,MAApB;AAFG,qBAAZ,E,CAKA;;AACM0D,4B,GAAWvC,KAAK,CAACG,QAAN,CAAeqC,MAAf,CAAsBxC,KAAK,CAACG,QAAN,CAAesC,WAAf,CAA2B,GAA3B,IAAkC,CAAxD,C;;AACjB,2BAAMhE,UAAU,CAACiE,UAAX,CAAsB;AAC1BxC,0BAAI,EAAEqC,QADoB;AAE1BnC,+BAAS,EAAE,oEAAoBC;AAFL,qBAAtB,CAAN;;;;;;;;;AAID;;;;;;;uBAxIU1B,Y,EAAY,+G;AAAA,K;;;aAAZA,Y;AAAY,eAAZA,YAAY,K;AAAA,kBAFX;;;;;sEAEDA,Y,EAAY;cAHxB,wDAGwB;eAHb;AACVgE,oBAAU,EAAE;AADF,S;AAGa,Q;;;;;;;;;;;;;;;;;;;;;;ACTzB;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;QAkBaC,c;;;;;YAAAA;;;;yBAAAA,c;AAAc,O;AAAA,gBAThB,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,2GAJO,EAKP,6DAAaC,QAAb,CAAsB,CAAC;AAAE3C,YAAI,EAAE,EAAR;AAAY4C,iBAAS,EAAE;AAAvB,OAAD,CAAtB,CALO,CASgB;;;;0HAAdF,c,EAAc;AAAA,uBAFV,mDAEU;AAFF,kBANrB,0DAMqB,EALrB,4DAKqB,EAJrB,0DAIqB,EAHrB,2GAGqB,EAHU,4DAGV;AAEE,O;AALQ,K;;;;;sEAKtBA,c,EAAc;cAV1B,sDAU0B;eAVjB;AACRG,iBAAO,EAAE,CACP,0DADO,EAEP,4DAFO,EAGP,0DAHO,EAIP,2GAJO,EAKP,6DAAaF,QAAb,CAAsB,CAAC;AAAE3C,gBAAI,EAAE,EAAR;AAAY4C,qBAAS,EAAE;AAAvB,WAAD,CAAtB,CALO,CADD;AAQRE,sBAAY,EAAE,CAAC,mDAAD;AARN,S;AAUiB,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACDvB;;AACE;;AAAqE;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;AAA2C;;AAClH;;;;;;AADW;;AAAA;;;;QCTFC,Q;AAEX,wBAAmBC,YAAnB,EAAsDC,qBAAtD,EAAoG;AAAA;;AAAjF,aAAAD,YAAA,GAAAA,YAAA;AAAmC,aAAAC,qBAAA,GAAAA,qBAAA;AAAgD;;;;mCAE3F;AACT,eAAKD,YAAL,CAAkBE,SAAlB;AACD;;;wCAE4BpD,K,EAAOqC,Q,EAAU;;;;;;;;;;AACxB,2BAAM,KAAKc,qBAAL,CAA2BE,MAA3B,CAAkC;AAC1DC,4BAAM,EAAE,QADkD;AAE1DC,6BAAO,EAAE,CAAC;AACRC,4BAAI,EAAE,QADE;AAERC,4BAAI,EAAE,aAFE;AAGRC,4BAAI,EAAE,OAHE;AAIRC,+BAAO,EAAE,mBAAM;AACb,+BAAI,CAACT,YAAL,CAAkBU,aAAlB,CAAgC5D,KAAhC,EAAuCqC,QAAvC;AACD;AANO,uBAAD,EAON;AACDmB,4BAAI,EAAE,QADL;AAEDE,4BAAI,EAAE,OAFL;AAGDD,4BAAI,EAAE,QAHL;AAIDE,+BAAO,EAAE,mBAAM,CACb;AACA;AAND,uBAPM;AAFiD,qBAAlC,CAAN;;;AAAdE,+B;;AAkBN,2BAAMA,WAAW,CAACC,OAAZ,EAAN;;;;;;;;;AACD;;;;;;;uBA5BUb,Q,EAAQ,qI,EAAA,qI;AAAA,K;;;YAARA,Q;AAAQ,+B;AAAA,e;AAAA,a;AAAA,wO;AAAA;AAAA;ADTrB;;AACE;;AACE;;AACE;;AACF;;AACF;;AACF;;AAEA;;AACE;;AACE;;AACE;;AAAwB;;AAAa;;AACvC;;AACF;;AAEA;;AACE;;AACA;;AAGA;;AACF;;AAEA;;AACE;;AAAgB;AAAA,mBAAS,IAAAC,YAAA,kBAAT;AAAuC,WAAvC;;AACd;;AACF;;AACF;;AACF;;;;AAXsB;;AAAA;;;;;;;;;sECRTD,Q,EAAQ;cALpB,uDAKoB;eALV;AACTc,kBAAQ,EAAE,UADD;AAETC,qBAAW,EAAE,gBAFJ;AAGTC,mBAAS,EAAE,CAAC,gBAAD;AAHF,S;AAKU,Q","file":"tab2-tab2-module-es5.js","sourcesContent":["import { Injectable } from '@angular/core';\nimport { Plugins, CameraResultType, Capacitor, FilesystemDirectory, CameraPhoto, CameraSource } from '@capacitor/core';\nimport { Platform } from '@ionic/angular';\n\nconst { Camera, Filesystem, Storage } = Plugins;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PhotoService {\n  public photos: Photo[] = [];\n  private PHOTO_STORAGE: string = \"photos\";\n  private platform: Platform;\n\n  constructor(platform: Platform) {\n    this.platform = platform;\n   }\n\n  public async loadSaved() {\n    // Retrieve cached photo array data\n    const photos = await Storage.get({ key: this.PHOTO_STORAGE });\n    this.photos = JSON.parse(photos.value) || [];\n\n    // If running on the web...\n    if (!this.platform.is('hybrid')) {\n      // Display the photo by reading into base64 format\n      for (let photo of this.photos) {\n        // Read each saved photo's data from the Filesystem\n        const readFile = await Filesystem.readFile({\n            path: photo.filepath,\n            directory: FilesystemDirectory.Data\n        });\n      \n        // Web platform only: Save the photo into the base64 field\n        photo.base64 = `data:image/jpeg;base64,${readFile.data}`;\n      }\n    }\n  }\n\n  /* Use the device camera to take a photo:\n  // https://capacitor.ionicframework.com/docs/apis/camera\n  \n  // Store the photo data into permanent file storage:\n  // https://capacitor.ionicframework.com/docs/apis/filesystem\n  \n  // Store a reference to all photo filepaths using Storage API:\n  // https://capacitor.ionicframework.com/docs/apis/storage\n  */\n  public async addNewToGallery() {\n    // Take a photo\n    const capturedPhoto = await Camera.getPhoto({\n      resultType: CameraResultType.Uri, // file-based data; provides best performance\n      source: CameraSource.Camera, // automatically take a new photo with the camera\n      quality: 100 // highest quality (0 to 100)\n    });\n    \n    const savedImageFile = await this.savePicture(capturedPhoto);\n\n    // Add new photo to Photos array\n    this.photos.unshift(savedImageFile);\n\n    // Cache all photo data for future retrieval\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: this.platform.is('hybrid')\n              ? JSON.stringify(this.photos)  \n              : JSON.stringify(this.photos.map(p => {\n                // Don't save the base64 representation of the photo data, \n                // since it's already saved on the Filesystem\n                const photoCopy = { ...p };\n                delete photoCopy.base64;\n\n                return photoCopy;\n                }))\n    });\n  }\n\n  // Save picture to file on device\n  private async savePicture(cameraPhoto: CameraPhoto) {\n    // Convert photo to base64 format, required by Filesystem API to save\n    const base64Data = await this.readAsBase64(cameraPhoto);\n\n    // Write the file to the data directory\n    const fileName = new Date().getTime() + '.jpeg';\n    const savedFile = await Filesystem.writeFile({\n      path: fileName,\n      data: base64Data,\n      directory: FilesystemDirectory.Data\n    });\n\n    if (this.platform.is('hybrid')) {\n      // Display the new image by rewriting the 'file://' path to HTTP\n      // Details: https://ionicframework.com/docs/building/webview#file-protocol\n      return {\n        filepath: savedFile.uri,\n        webviewPath: Capacitor.convertFileSrc(savedFile.uri),\n      };\n    }\n    else {\n      // Use webPath to display the new image instead of base64 since it's \n      // already loaded into memory\n      return {\n        filepath: fileName,\n        webviewPath: cameraPhoto.webPath\n      };\n    }\n  }\n\n  // Read camera photo into base64 format based on the platform the app is running on\n  private async readAsBase64(cameraPhoto: CameraPhoto) {\n    // \"hybrid\" will detect Cordova or Capacitor\n    if (this.platform.is('hybrid')) {\n      // Read the file into base64 format\n      const file = await Filesystem.readFile({\n        path: cameraPhoto.path\n      });\n\n      return file.data;\n    }\n    else {\n      // Fetch the photo, read as a blob, then convert to base64 format\n      const response = await fetch(cameraPhoto.webPath!);\n      const blob = await response.blob();\n\n      return await this.convertBlobToBase64(blob) as string;  \n    }\n  }\n\n  // Delete picture by removing it from reference data and the filesystem\n  public async deletePicture(photo: Photo, position: number) {\n    // Remove this photo from the Photos reference data array\n    this.photos.splice(position, 1);\n\n    // Update photos array cache by overwriting the existing photo array\n    Storage.set({\n      key: this.PHOTO_STORAGE,\n      value: JSON.stringify(this.photos)\n    });\n\n    // delete photo file from filesystem\n    const filename = photo.filepath.substr(photo.filepath.lastIndexOf('/') + 1);\n    await Filesystem.deleteFile({\n      path: filename,\n      directory: FilesystemDirectory.Data\n    });\n  }\n\n  convertBlobToBase64 = (blob: Blob) => new Promise((resolve, reject) => {\n    const reader = new FileReader;\n    reader.onerror = reject;\n    reader.onload = () => {\n        resolve(reader.result);\n    };\n    reader.readAsDataURL(blob);\n  });\n}\n\ninterface Photo {\n  filepath: string;\n  webviewPath: string;\n  base64?: string;\n}\n","import { IonicModule } from '@ionic/angular';\nimport { RouterModule } from '@angular/router';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule } from '@angular/forms';\nimport { Tab2Page } from './tab2.page';\nimport { ExploreContainerComponentModule } from '../explore-container/explore-container.module';\n\n@NgModule({\n  imports: [\n    IonicModule,\n    CommonModule,\n    FormsModule,\n    ExploreContainerComponentModule,\n    RouterModule.forChild([{ path: '', component: Tab2Page }])\n  ],\n  declarations: [Tab2Page]\n})\nexport class Tab2PageModule {}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>\n      Photo Gallery\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-header collapse=\"condense\">\n    <ion-toolbar>\n      <ion-title size=\"large\">Photo Gallery</ion-title>\n    </ion-toolbar>\n  </ion-header>\n\n  <ion-grid>\n    <ion-row>\n    <ion-col size=\"6\" *ngFor=\"let photo of photoService.photos; index as position\">\n      <ion-img src=\"{{ photo.base64 ? photo.base64 : photo.webviewPath }}\" (click)=\"showActionSheet(photo, position)\"></ion-img>\n    </ion-col>\n    </ion-row>\n  </ion-grid>\n\n  <ion-fab vertical=\"bottom\" horizontal=\"center\" slot=\"fixed\">\n    <ion-fab-button (click)=\"photoService.addNewToGallery()\">\n      <ion-icon name=\"camera\"></ion-icon>\n    </ion-fab-button>\n  </ion-fab>\n</ion-content>\n","import { Component } from '@angular/core';\nimport { ActionSheetController } from '@ionic/angular';\nimport { PhotoService } from '../services/photo.service';\n\n@Component({\n  selector: 'app-tab2',\n  templateUrl: 'tab2.page.html',\n  styleUrls: ['tab2.page.scss']\n})\nexport class Tab2Page {\n\n  constructor(public photoService: PhotoService, public actionSheetController: ActionSheetController) {}\n\n  ngOnInit() {\n    this.photoService.loadSaved();\n  }\n\n  public async showActionSheet(photo, position) {\n    const actionSheet = await this.actionSheetController.create({\n      header: 'Photos',\n      buttons: [{\n        text: 'Delete',\n        role: 'destructive',\n        icon: 'trash',\n        handler: () => {\n          this.photoService.deletePicture(photo, position);\n        }\n      }, {\n        text: 'Cancel',\n        icon: 'close',\n        role: 'cancel',\n        handler: () => {\n          // Nothing to do, action sheet is automatically closed\n         }\n      }]\n    });\n    await actionSheet.present();\n  }\n}\n"]}